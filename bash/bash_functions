# ============================================================================
# Custom Functions
# ============================================================================ 

# Create a new directory and enter it
function mkd() {
    mkdir -p "$@" && cd "$@"
}

# Get gzipped file size
function gz() {
    echo "orig size (bytes): "
    cat "$1" | wc -c
    echo "gzipped size (bytes): "
    gzip -c "$1" | wc -c
}

# cd into whatever is the forefront Finder window.
cdf() {  # short for cdfinder
  cd "`osascript -e 'tell app "Finder" to POSIX path of (insertion location as alias)'`"
}

# Start an HTTP server from a directory, optionally specifying the port
function serverpy() {
    local port="${1:-8000}"
    open "http://localhost:${port}/"
    # Set the default Content-Type to `text/plain` instead of `application/octet-stream`
    # And serve everything as UTF-8 (although not technically correct, this doesnâ€™t break anything for binary files)
    python -c $'import SimpleHTTPServer;\nmap = SimpleHTTPServer.SimpleHTTPRequestHandler.extensions_map;\nmap[""] = "text/plain";\nfor key, value in map.items():\n\tmap[key] = value + ";charset=UTF-8";\nSimpleHTTPServer.test();' "$port"
}

# Start webrick server from current directory
function server {
    local port=$1
    : ${port:=3000}
    open "http://localhost:${port}/"
    ruby -rwebrick -e"s = WEBrick::HTTPServer.new(:Port => $port, :DocumentRoot => Dir.pwd, :MimeTypes => WEBrick::HTTPUtils::load_mime_types('/etc/apache2/mime.types')); trap(%q(INT)) { s.shutdown }; s.start"
}

# Update submodules in a git repo
function update_submodules(){
    git submodule foreach git pull
}

# New blank compass project that loads my preferred file structure
function cblank() {
    compass create ${1} --bare --sass-dir "sass" --css-dir "css" --javascripts-dir "js" --images-dir "img"
    cd ${1}
    mkdir css
    mkdir js
    mkdir img
}

# Print where dem gemz at
function gemdir {
  echo `gem env gemdir`
}


