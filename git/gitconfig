[include]
    path = ~/.gitconfig.local
[alias]
    # `git remote prune origin`: remove remote-tracking branches that were deleted from the remote repo
    # `git gc`: cleanup unnecessary files and optimize the local repository
    # `git clean -df`: remove untracked files and directories from the working tree
    # `git stash clear`: remove all stashed states
    trim = !git remote prune origin && git gc
    cleanup = !git clean -df && git stash clear

    st = status -s                              # short status

    a = add                                     # add
    aa = add -A                                 # add all the things

    cm = commit -m                              # commit with message
    ca = commit -am                             # commit all with message
    ci = commit                                 # commit
    amend = commit --amend                      # ammend your last commit

    b = branch -v                               # show branches (verbose)
    co = checkout                               # checkout
    nb = checkout -b                            # create and switch to new branch (mnemonic: "git new branch branchname...")

    diffc = diff --cached                       # Diff what is staged for the next commit
    diffst = diff --stat                        # Diff overview
    dt = difftool                               # fire difftool (mvim)

    lg = log -p
    l = log --graph --decorate --pretty=oneline --abbrev-commit
    la = log --graph --decorate --pretty=oneline --abbrev-commit --all
    ls = ls-files

    ss = stash                                  # stash changes
    sl = stash list                             # list stashes
    sa = stash apply                            # apply stash (restore changes)
    sd = stash drop                             # drop stashes (destory changes)

    sm = submodule                              # submodule
    smi = submodule init                        # initialize submodules
    smu = submodule update                      # update all submodules

    smp = submodule foreach git pull            # update submodules with attached heads
    small = submodule foreach git checkout master

    pl = pull                                   # pull
    ps = push                                   # push
    r = remote -v                               # show remotes (verbose)

    unstage = reset HEAD                        # remove files from index
    undopush = push -f origin HEAD^:master      # go back before last commit, with files in uncommitted state
    filelog = log -u                            # show changes to a file
    mt = mergetool                              # fire up the merge tool

    # show the modified files for a specified commit
    nameonly = diff-tree --no-commit-id --name-only -r
[color]
    ui = true
[core]
    # Use custom `.gitignore` and `.gitattributes`
    excludesfile = ~/.gitignore
    #attributesfile = ~/.gitattributes
[credential]
    helper = osxkeychain
[push]
	default = simple
[diff]
	tool = mvimdiff
[difftool "mvimdiff"]
	cmd = mvim -f -d \"$LOCAL\" \"$REMOTE\"
[difftool]
    prompt = false
